###################################################################
# Copyright 2014 EUROPEAN DYNAMICS SA <info@eurodyn.com>
###################################################################
# Licensed under the EUPL, Version 1.1 only (the "License").
# You may not use this work except in compliance with the Licence.
# You may obtain a copy of the Licence at:
# https://joinup.ec.europa.eu/software/page/eupl/licence-eupl
###################################################################
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licence is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licence for the specific language governing permissions and
# limitations under the Licence.
###################################################################
#################################################################
# QLACK Util - MySQL Datasource (XA) configuration
# etc/com.eurodyn.qlack2.util.datasourcegeneric.cfg
#################################################################
driverClass=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource
datasourceType=javax.sql.XADataSource
jdbcURL=jdbc:mysql://localhost:3306/qbe?useUnicode=true&characterEncoding=UTF-8&characterSetResults=utf8&connectionCollation=utf8_general_ci
username=root
password=root
jndiName=jdbc/qlack-ds
driverParametersMapping=url-jdbcURL,user-username,password-password

# The initial number of connections that are created when the pool is started.
pool.initialSize=10
# The maximum number of active connections that can be allocated from this pool
# at the same time, or negative for no limit.
pool.maxActive=-1
# The maximum number of connections that can remain idle in the pool, without
# extra ones being released, or negative for no limit.
pool.maxIdle=10
# The minimum number of connections that can remain idle in the pool, without
# extra ones being created, or zero to create none.
pool.minIdle=10
# The maximum number of milliseconds that the pool will wait (when there are no
# available connections) for a connection to be returned before throwing an
# exception, or -1 to wait indefinitely.
pool.maxWait=-1
# The SQL query that will be used to validate connections from this pool before
# returning them to the caller. If specified, this query MUST be an SQL SELECT
# statement that returns at least one row
pool.validationQuery=select 1
# The indication of whether objects will be validated before being borrowed
# from the pool. If the object fails to validate, it will be dropped from the
# pool, and we will attempt to borrow another.
pool.testOnBorrow=true
# Flag to remove abandoned connections if they exceed the removeAbandonedTimout.
# If set to true a connection is considered abandoned and eligible for removal
# if it has been idle longer than the removeAbandonedTimeout. Setting this to
# true can recover db connections from poorly written applications which fail
# to close a connection.
pool.removeAbandoned=false
#  Timeout in seconds before an abandoned connection can be removed.
pool.removeAbandonedTimeout=300